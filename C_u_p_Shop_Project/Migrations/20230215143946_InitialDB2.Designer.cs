// <auto-generated />
using System;
using Crops_Shop_Project.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CropsShopProject.Migrations
{
    [DbContext(typeof(CropsShopContext))]
    [Migration("20230215143946_InitialDB2")]
    partial class InitialDB2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Crops_Shop_Project.Models.Buyer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Family")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("buyers");
                });

            modelBuilder.Entity("Crops_Shop_Project.Models.Cart", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("buyerId")
                        .HasColumnType("int");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("buyerId");

                    b.HasIndex("productId");

                    b.ToTable("carts");
                });

            modelBuilder.Entity("Crops_Shop_Project.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("productId");

                    b.ToTable("comments");
                });

            modelBuilder.Entity("Crops_Shop_Project.Models.Group", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("groups");
                });

            modelBuilder.Entity("Crops_Shop_Project.Models.Order", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.Property<int>("WeightMassUnit")
                        .HasColumnType("int");

                    b.Property<int>("buyerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("orderDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.Property<int?>("sellerId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("buyerId");

                    b.HasIndex("productId");

                    b.HasIndex("sellerId");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("Crops_Shop_Project.Models.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<float>("Stock")
                        .HasColumnType("real");

                    b.Property<int>("StockMassUnit")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.Property<int>("WeightMassUnit")
                        .HasColumnType("int");

                    b.Property<int?>("groupId")
                        .HasColumnType("int");

                    b.Property<string>("productImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("registerDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("sellerId")
                        .HasColumnType("int");

                    b.Property<int?>("subGroupId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("groupId");

                    b.HasIndex("sellerId");

                    b.HasIndex("subGroupId");

                    b.ToTable("products");
                });

            modelBuilder.Entity("Crops_Shop_Project.Models.Seller", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Family")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("sellers");
                });

            modelBuilder.Entity("Crops_Shop_Project.Models.SubGroup", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("parentGroupId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("parentGroupId");

                    b.ToTable("subGroups");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Crops_Shop_Project.Models.Cart", b =>
                {
                    b.HasOne("Crops_Shop_Project.Models.Buyer", "buyer")
                        .WithMany("carts")
                        .HasForeignKey("buyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Crops_Shop_Project.Models.Product", "product")
                        .WithMany("carts")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("buyer");

                    b.Navigation("product");
                });

            modelBuilder.Entity("Crops_Shop_Project.Models.Comment", b =>
                {
                    b.HasOne("Crops_Shop_Project.Models.Product", "product")
                        .WithMany()
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");
                });

            modelBuilder.Entity("Crops_Shop_Project.Models.Order", b =>
                {
                    b.HasOne("Crops_Shop_Project.Models.Buyer", "buyer")
                        .WithMany("orders")
                        .HasForeignKey("buyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Crops_Shop_Project.Models.Product", "product")
                        .WithMany("orders")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Crops_Shop_Project.Models.Seller", "seller")
                        .WithMany("orders")
                        .HasForeignKey("sellerId");

                    b.Navigation("buyer");

                    b.Navigation("product");

                    b.Navigation("seller");
                });

            modelBuilder.Entity("Crops_Shop_Project.Models.Product", b =>
                {
                    b.HasOne("Crops_Shop_Project.Models.Group", "group")
                        .WithMany("product")
                        .HasForeignKey("groupId");

                    b.HasOne("Crops_Shop_Project.Models.Seller", "seller")
                        .WithMany("products")
                        .HasForeignKey("sellerId");

                    b.HasOne("Crops_Shop_Project.Models.SubGroup", "subGroup")
                        .WithMany("product")
                        .HasForeignKey("subGroupId");

                    b.Navigation("group");

                    b.Navigation("seller");

                    b.Navigation("subGroup");
                });

            modelBuilder.Entity("Crops_Shop_Project.Models.SubGroup", b =>
                {
                    b.HasOne("Crops_Shop_Project.Models.Group", "parentGroup")
                        .WithMany("subGroups")
                        .HasForeignKey("parentGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("parentGroup");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Crops_Shop_Project.Models.Buyer", b =>
                {
                    b.Navigation("carts");

                    b.Navigation("orders");
                });

            modelBuilder.Entity("Crops_Shop_Project.Models.Group", b =>
                {
                    b.Navigation("product");

                    b.Navigation("subGroups");
                });

            modelBuilder.Entity("Crops_Shop_Project.Models.Product", b =>
                {
                    b.Navigation("carts");

                    b.Navigation("orders");
                });

            modelBuilder.Entity("Crops_Shop_Project.Models.Seller", b =>
                {
                    b.Navigation("orders");

                    b.Navigation("products");
                });

            modelBuilder.Entity("Crops_Shop_Project.Models.SubGroup", b =>
                {
                    b.Navigation("product");
                });
#pragma warning restore 612, 618
        }
    }
}
